# Generated by Django 4.2.7 on 2025-08-04 16:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=20)),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('insta_id', models.CharField(blank=True, max_length=100, verbose_name='Instagram ID')),
                ('city', models.CharField(blank=True, max_length=100)),
                ('is_decision_maker', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3, verbose_name='Are you a decision maker?')),
                ('decision_maker_email', models.EmailField(blank=True, help_text="Required if you're not the decision maker", max_length=254, verbose_name='Decision Maker Email')),
                ('decision_maker_contact', models.CharField(blank=True, help_text="Required if you're not the decision maker", max_length=20, verbose_name='Decision Maker Contact')),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_contacted', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceIcon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon_class', models.CharField(help_text='CSS class or icon identifier', max_length=100)),
                ('icon_image', models.ImageField(blank=True, null=True, upload_to='service_icons/')),
                ('is_lucide', models.BooleanField(default=True, help_text='Is this a Lucide icon?')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Allure Marketing', max_length=100)),
                ('tagline', models.CharField(default='Premium Branding & Design', max_length=200)),
                ('hero_title', models.CharField(max_length=200)),
                ('hero_subtitle', models.TextField()),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('whatsapp_number', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('about_text', models.TextField()),
                ('meta_description', models.TextField()),
                ('meta_keywords', models.TextField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site/')),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='VideoType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=200)),
                ('video_description', models.TextField()),
                ('video_file', models.FileField(blank=True, null=True, upload_to='videos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'avi', 'mov', 'wmv', 'flv', 'webm', 'mkv'])])),
                ('video_url', models.URLField(blank=True, help_text='External video URL (YouTube, Vimeo, etc.)')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/')),
                ('is_featured', models.BooleanField(default=False)),
                ('video_created_at', models.DateTimeField(auto_now_add=True)),
                ('video_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='core.videotype')),
            ],
            options={
                'ordering': ['-video_created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('key_point_1', models.CharField(blank=True, max_length=200)),
                ('key_point_2', models.CharField(blank=True, max_length=200)),
                ('key_point_3', models.CharField(blank=True, max_length=200)),
                ('key_point_4', models.CharField(blank=True, max_length=200)),
                ('key_point_5', models.CharField(blank=True, max_length=200)),
                ('key_point_6', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.serviceicon')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
    ]
